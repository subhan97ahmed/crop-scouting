[{"C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\index.js":"1","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\App.js":"2","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\pages\\Home.js":"3","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\Loginform.js":"4","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\AppHeader.js":"5","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\initializeFirebase.js":"6","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\InitializeFirebase.js":"7","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\Main.js":"8"},{"size":278,"mtime":1606856925661,"results":"9","hashOfConfig":"10"},{"size":1539,"mtime":1606856546077,"results":"11","hashOfConfig":"10"},{"size":5385,"mtime":1606857346814,"results":"12","hashOfConfig":"10"},{"size":1331,"mtime":1606856605743,"results":"13","hashOfConfig":"10"},{"size":293,"mtime":1606681637623,"results":"14","hashOfConfig":"10"},{"size":653,"mtime":1606834623815,"results":"15","hashOfConfig":"10"},{"size":649,"mtime":1606845530935,"results":"16","hashOfConfig":"10"},{"size":442,"mtime":1606856668407,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15unmal",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\index.js",[],["38","39"],"C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\App.js",["40","41","42","43"],"import { useState } from \"react\";\nimport \"./App.css\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./components/Loginform.js\";\nimport \"firebase/auth\";\nimport Loginform from \"./components/Loginform\";\nimport AppHeader from \"./components/AppHeader\";\nimport { initializeFirebase } from \"./components/InitializeFirebase.js\";\n\nfunction App() {\n  let firebase = initializeFirebase();\n  const [currentuser, setCurrentUser] = useState();\n  const [error, setError] = useState(\"\");\n  const Login = (details) => {\n    console.log(details);\n    if (details.email != null && details.pass != null) {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(\n          details.email.toString(),\n          details.pass.toString()\n        )\n        .then((user) => {\n          console.log(user);\n          setCurrentUser(user);\n          window.location.replace(document.URL + \"Home\");\n          console.log(\"logged in\");\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n\n          console.log(errorMessage);\n        });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <div className=\"body\">\n        <div style={{ height: \"20px\", margin: \"0px\" }}></div>\n\n        <div className=\"login\">\n          <Paper variant=\"elevation\" elevation={3}>\n            <h1 style={{ margin: \"10px\", fontFamily: \"Roboto\" }}>Login</h1>\n            <Loginform Login={Login} />\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\pages\\Home.js",["44","45","46","47"],"// import \"../index.css\";\r\nimport { initializeFirebase } from \"../components/InitializeFirebase\";\r\nimport AppHeader from \"../components/AppHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport firebase from \"@firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nfunction Home() {\r\n  firebase = initializeFirebase();\r\n  const allnotes = [];\r\n  let db = firebase.firestore();\r\n  const [newnote, setnewnote] = useState({ inspector: \"\", date: \"\", des: \"\" });\r\n  const [notes, setnotes] = useState([]);\r\n\r\n  function createData(inspector, date, des) {\r\n    return { inspector, date, des };\r\n  }\r\n  useEffect(() => {\r\n    db.collection(\"notes\")\r\n      .orderBy(\"date\", \"desc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          allnotes.push(\r\n            createData(doc.data().inspector, doc.data().date, doc.data().des)\r\n          );\r\n        });\r\n        setnotes(allnotes);\r\n        console.log(notes);\r\n      });\r\n  }, []);\r\n\r\n  const SubmitHandler = (e) => {\r\n    if (newnote.inspector != \"\" && newnote.date != \"\" && newnote.des != \"\") {\r\n      db.collection(\"notes\")\r\n        .add(newnote)\r\n        .then(function (docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n          setnewnote({ ...newnote, inspector: \"\", des: \"\", date: \"\" });\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n    } else {\r\n      console.log(\"fill all the fields\")\r\n    }\r\n  };\r\n\r\n  const LogOut =()=>{\r\n    window.location.replace(\"/\")\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{\r\n          backgroundColor: \"#f03131\",\r\n          color: \"white\",\r\n          float: \"right\",\r\n          margin: \"5px\",\r\n          textTransform: \"capitalize\",\r\n        }}\r\n\r\n        onClick={LogOut}\r\n      >\r\n        Logout\r\n      </Button>\r\n      <AppHeader />\r\n      <div className=\"body\">\r\n        <div style={{ height: \"20px\", margin: \"0px\" }}></div>\r\n\r\n        <Paper\r\n          variant=\"elevation\"\r\n          elevation={3}\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n        >\r\n          <form onSubmit={SubmitHandler}>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <h1>Crop Scouting</h1>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Inspector Name\"\r\n                style={{ margin: \"5px\" }}\r\n                onChange={(e) =>\r\n                  setnewnote({ ...newnote, inspector: e.target.value })\r\n                }\r\n                value={newnote.inspector}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Date\"\r\n                style={{ margin: \"5px\", width: \"210px\" }}\r\n                type=\"date\"\r\n                InputLabelProps={{ shrink: true }}\r\n                onChange={(e) =>\r\n                  setnewnote({ ...newnote, date: e.target.value })\r\n                }\r\n                value={newnote.date}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Description\"\r\n                multiline\r\n                rows={4}\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                style={{ margin: \"5px\" }}\r\n                onChange={(e) =>\r\n                  setnewnote({ ...newnote, des: e.target.value })\r\n                }\r\n                value={newnote.des}\r\n              ></TextField>\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                style={{ margin: \"5px\", Color: \"rgb(0, 168, 89)\" }}\r\n              >\r\n                Save note\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n        <TableContainer\r\n          id=\"table\"\r\n          component={Paper}\r\n          style={{ width: \"80%\", marginLeft: \"10%\", marginRight: \"10%\" }}\r\n        >\r\n          <h1 style={{ textAlign: \"center\" }}>Notes</h1>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Inspector</TableCell>\r\n                <TableCell>Description</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {notes.map((element) => (\r\n                <TableRow key={element.date}>\r\n                  <TableCell>{element.date}</TableCell>\r\n                  <TableCell>{element.inspector}</TableCell>\r\n                  <TableCell>{element.des}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\Loginform.js",[],"C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\AppHeader.js",["48"],"import React from 'react'\r\nimport im from \"../img/Logo.png\";\r\n\r\n// import \"./index.css\"\r\nfunction AppHeader() {\r\n    return (\r\n        <header className=\"App-header\">\r\n        <img src={im} style={{ imageResolution: \"-moz-initial\" }} />\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader\r\n","C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\initializeFirebase.js",[],"C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\InitializeFirebase.js",[],"C:\\Users\\user\\Desktop\\crop sout\\crop-scout\\src\\components\\Main.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":12,"column":10,"nodeType":"55","messageId":"56","endLine":12,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":13,"column":10,"nodeType":"55","messageId":"56","endLine":13,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":13,"column":17,"nodeType":"55","messageId":"56","endLine":13,"endColumn":25},{"ruleId":"53","severity":1,"message":"59","line":30,"column":15,"nodeType":"55","messageId":"56","endLine":30,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":42,"column":6,"nodeType":"62","endLine":42,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":45,"column":27,"nodeType":"66","messageId":"67","endLine":45,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":45,"column":49,"nodeType":"66","messageId":"67","endLine":45,"endColumn":51},{"ruleId":"64","severity":1,"message":"65","line":45,"column":70,"nodeType":"66","messageId":"67","endLine":45,"endColumn":72},{"ruleId":"68","severity":1,"message":"69","line":8,"column":9,"nodeType":"70","endLine":8,"endColumn":69},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'currentuser' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'errorCode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allnotes', 'db', and 'notes'. Either include them or remove the dependency array.","ArrayExpression",["73"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [allnotes, db, notes]",{"range":"76","text":"77"},[1520,1522],"[allnotes, db, notes]"]